export declare function readableStreamToAsyncIterable(stream: any, preventCancel?: boolean): any;
export declare class IterableReadableStream<T> extends ReadableStream<T> {
    reader: ReadableStreamDefaultReader;
    ensureReader(): void;
    next(): Promise<ReadableStreamReadResult<any>>;
    return(): Promise<{
        done: boolean;
        value: undefined;
    }>;
    [Symbol.asyncIterator](): this;
    static fromAsyncGenerator<T>(generator: AsyncGenerator<T>): IterableReadableStream<T>;
}
